#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {


    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none             &none             &none     &none             &none                                                     &none            &none  &none      &none       &none                                 &none
&none  &kp Q             &kp W             &kp E     &kp R             &kp T                                                     &kp Y            &kp U  &kp I      &kp O       &kp P                                 &none
&none  &mt LCTRL A       &kp S             &kp D     &lt 4 F           &kp G                 &none             &none             &kp H            &kp J  &kp K      &kp L       &kp MINUS                             &none
&none  &mt LEFT_SHIFT Z  &kp X             &kp C     &kp V             &kp B                 &tog 5            &kp BACKSPACE     &kp N            &kp M  &mkp LCLK  &mkp RCLK   &mt RA(RS(RC(RG(RIGHT_SHIFT)))) FSLH  &none
&none  &kp LANGUAGE_2    &mt LEFT_GUI TAB  &kp LALT  &mt LEFT_GUI TAB  &mt LEFT_SHIFT SPACE  &lt 2 LANGUAGE_1  &lt 3 LANGUAGE_2  &mt RCTRL ENTER  &none  &none      &kp ESCAPE  &kp LANGUAGE_1                        &none
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans                  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans                  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &mkp RCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans        &trans        &trans        &trans                  &trans         &trans  &trans   &trans   &trans   &trans
&trans  &none   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none                   &none          &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &none   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none   &trans  &trans  &none          &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none   &trans  &trans  &none          &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans  &trans  &trans        &kp NUMBER_0  &trans        &trans  &trans  &trans  &kp BACKSPACE  &none   &trans   &trans   &trans   &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans            &trans             &trans      &trans    &trans                     &trans         &trans                &trans                 &trans                 &trans             &trans
&trans  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp EXCL    &none     &kp TILDE                  &kp CARET      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT        &trans
&trans  &kp AT_SIGN       &kp SEMICOLON      &kp DOLLAR  &kp PLUS  &kp EQUAL  &trans  &trans  &kp HASH       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &trans
&trans  &none             &kp ASTERISK       &kp COLON   &none     &kp GRAVE  &trans  &trans  &kp AMPERSAND  &kp BACKSLASH         &kp COMMA              &kp PERIOD             &kp PIPE           &trans
&trans  &trans            &trans             &trans      &none     &none      &trans  &trans  &trans         &trans                &trans                 &kp LESS_THAN          &kp GREATER_THAN   &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans        &trans             &trans      &trans  &trans                  &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans        &trans             &trans      &trans  &trans                  &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &kp C_VOL_UP  &kp C_VOLUME_DOWN  &kp C_MUTE  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans        &trans             &trans      &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans        &trans             &trans      &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans  &trans
            >;
        };

        layer_5 {
            // スクロールレイヤー - トラックボールの動きがスクロールとして解釈される
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &tog 5  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};

// トラックボールのスクロールモード設定
&trackball_listener {
    set_scroll_mode {
        layers = <5>;
        input-processors = <&zip_xy_to_scroll_mapper &zip_scroll_transform 1 (-1) &zip_scroll_scaler 1 10>;
    };
};
